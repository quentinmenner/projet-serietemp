knitr::opts_chunk$set(echo = TRUE)
plot(gg)
lien_graph = "projet-serietemp/Graphiques"
gg = readRDS(file.path(lien_graph,"courbe.rds"))
getwd
getwd()
lien_graph = "Graphiques"
gg = readRDS(file.path(lien_graph,"courbe.rds"))
lien_graph = "Graphiques"
gg = readRDS(file.path(lien_graph,"courbe.rds"))
plot(gg)
gg = ggplot(data = data, aes(x = Periode, y = Valeur))+
geom_line()+
scale_x_date(expand = c(0.01, 0.01)) +
ggtitle("Evolution de l'indice de la production mensuelle de biens manufacturés
\nen France entre janvier 1985 et janvier 2000")+
labs(caption = "Indice en base 100 en 1990")+
ggthemes::theme_stata()+
theme(
plot.title   = element_text(lineheight = 0.8, face = "bold", hjust = 0.5, size = 15),
axis.text.x  = element_text(angle = 45, hjust = 1),
axis.text.y  = element_text(),
axis.title.x = element_blank(),
axis.title.y = element_blank())
library(zoo)
library(tseries)
library(lmtest)
library(forecast)
library(ggplot2)
library(urca)
library(tidyverse)
library(lubridate)
library(xts)
library(patchwork)
# Lieu exportation graphiques
setwd(dir = "~/projet-serietemp")
lien_graph = "Graphiques"
# Importation et structuration des donnï¿½es ####
datafile <- "valeurs_mensuelles_2.csv"
data <- read.csv(datafile, sep = ";") %>%
arrange(Periode) %>%
mutate(Periode = ym(Periode))
ts_data <- ts(data$Valeur, start = c(1985,01), freq = 12)
gg = ggplot(data = data, aes(x = Periode, y = Valeur))+
geom_line()+
scale_x_date(expand = c(0.01, 0.01)) +
ggtitle("Evolution de l'indice de la production mensuelle de biens manufacturés
\nen France entre janvier 1985 et janvier 2000")+
labs(caption = "Indice en base 100 en 1990")+
ggthemes::theme_stata()+
theme(
plot.title   = element_text(lineheight = 0.8, face = "bold", hjust = 0.5, size = 15),
axis.text.x  = element_text(angle = 45, hjust = 1),
axis.text.y  = element_text(),
axis.title.x = element_blank(),
axis.title.y = element_blank())
saveRDS(gg, file.path(lien_graph,"courbe.rds"))
lien_graph = "Graphiques"
gg = readRDS(file.path(lien_graph,"courbe.rds"))
plot(gg)
acf1 = readRDS(file.path(lien_graph,"ACF_1.rds"))
plot(acf1)
library(patchwork)
gg3 = ggplot(decomposition_saison, aes(month, moy_men)) +
geom_boxplot()
## Question 1
# Saisonnalitï¿½ ?
decomposition_saison <- data %>%
mutate(year = year(Periode)) %>%
mutate(month = month(Periode)) %>%
group_by(month) %>%
summarise(moy_mens = mean(Valeur))
gg3 = ggplot(decomposition_saison, aes(month, moy_men)) +
geom_boxplot()
gg3
gg3 = ggplot(decomposition_saison, aes(month, moy_mens)) +
geom_boxplot()
gg3
View(decomposition_saison)
## Question 1
# Saisonnalitï¿½ ?
decomposition_saison <- data %>%
mutate(year = year(Periode)) %>%
mutate(month = month(Periode)) %>%
select(month, Valeur)
gg3 = ggplot(decomposition_saison, aes(month, moy_mens)) +
geom_boxplot()
gg3
gg3 = ggplot(decomposition_saison, aes(month, Valeur)) +
geom_boxplot()
gg3
gg3 = ggplot(decomposition_saison, aes(group = month, Valeur)) +
geom_boxplot()
gg3
gg3 = ggplot(decomposition_saison, aes(group = month, y =Valeur)) +
geom_boxplot()
gg3
gg3 = ggplot(decomposition_saison, aes(group = month, x = month, y =Valeur)) +
geom_boxplot()
gg3
?month
## Question 1
# Saisonnalitï¿½ ?
decomposition_saison <- data %>%
mutate(year = year(Periode)) %>%
mutate(month = month(Periode, label = TRUE, locale = "Français")) %>%
select(month, Valeur)
## Question 1
# Saisonnalitï¿½ ?
decomposition_saison <- data %>%
mutate(year = year(Periode)) %>%
mutate(month = month(Periode, label = TRUE, locale = "French")) %>%
select(month, Valeur)
gg3 = ggplot(decomposition_saison, aes(group = month, x = month, y =Valeur)) +
geom_boxplot()
gg3
## Question 1
# Saisonnalitï¿½ ?
decomposition_saison <- data %>%
mutate(year = year(Periode)) %>%
mutate(month = month(Periode, label = TRUE, abbr = FALSE,locale = "French")) %>%
select(month, Valeur)
gg3 = ggplot(decomposition_saison, aes(group = month, x = month, y =Valeur)) +
geom_boxplot()
gg3
gg3 = ggplot(decomposition_saison, aes(group = month, x = month, y =Valeur)) +
geom_boxplot()+
ggthemes::theme_stata()+
theme(
plot.title   = element_text(lineheight = 0.8, face = "bold", hjust = 0.5, size = 15),
axis.text.x  = element_text(angle = 45,hjust = 1),
axis.text.y  = element_text(),
axis.title.x = element_text(),
axis.title.y = element_blank())
gg3
gg3 = ggplot(decomposition_saison, aes(group = month, x = month, y =Valeur)) +
geom_boxplot()+
ggthemes::theme_stata()+
theme(
plot.title   = element_text(lineheight = 0.8, face = "bold", hjust = 0.5, size = 15),
axis.text.x  = element_text(angle = 45,hjust = 1),
axis.text.y  = element_text(),
axis.title.x = element_blank(),
axis.title.y = element_blank())
gg3
plot(ts_data)
ts_data2 = diff(ts_data, 12)
plot(ts_data2)
# Une tendance ï¿½ la hausse semble se dï¿½gager
diff_ts = diff(ts_data2, 1)
plot(diff_ts)
# ADF test
test_adf = urca::ur.df(diff_ts)
summary(test_adf)
# PP test
test_pp = tseries::pp.test(diff_ts) # test utilisï¿½ dans corrigï¿½
summary(test_pp)
# PP test
test_pp = tseries::pp.test(diff_ts) # test utilisï¿½ dans corrigï¿½
summary(test_pp)
test_pp
# KPSS
test_kpss = urca::ur.kpss(diff_ts)
summary(test_kpss)
# Reprï¿½sentation de la sï¿½rie avant / aprï¿½s
plot(diff_ts)
time(diff_ts)
df_serie_choisi = data.frame(Periode = time(diff_ts),
Valeur = value(diff_ts))
?as_data_frame()
library(tsbox)
library(tsbox)
as.data.frame(diff_ts)
as_data_frame(diff_ts)
as_tibble(diff_ts)
df_serie_choisi = data.frame(Periode = time(diff_ts),
Valeur = as_tibble(diff_ts)$x)
df_serie_choisi
graph_serie_choisi = ggplot(df_serie_choisi, aes(x = Periode, y = Valeur))+
geom_line()
graph_serie_choisi
graph_serie_choisi = ggplot(df_serie_choisi, aes(x = Periode, y = Valeur))+
geom_line()+
scale_x_date(expand = c(0.01, 0.01)) +
ggtitle("Série temporelle choisie (différenciation saisonnière et
\n différenciation première)") +
ggthemes::theme_stata()+
theme(
plot.title   = element_text(lineheight = 0.8, face = "bold", hjust = 0.5, size = 15),
axis.text.x  = element_text(angle = 45, hjust = 1),
axis.text.y  = element_text(),
axis.title.x = element_blank(),
axis.title.y = element_blank())
graph_serie_choisi
df_serie_choisi
graph_serie_choisi
graph_serie_choisi
graph_serie_choisi = ggplot(df_serie_choisi, aes(x = Periode, y = Valeur))+
geom_line()+
scale_x_date(expand = c(0.01, 0.01)) +
ggtitle("Série temporelle choisie (différenciation saisonnière et
\n différenciation première)") +
ggthemes::theme_stata()+
theme(
plot.title   = element_text(lineheight = 0.8, face = "bold", hjust = 0.5, size = 15),
axis.text.x  = element_text(angle = 45, hjust = 1),
axis.text.y  = element_text(),
axis.title.x = element_blank(),
axis.title.y = element_blank())
graph_serie_choisi
df_serie_choisi = data.frame(Periode = as_Date(time(diff_ts)),
Valeur = as_tibble(diff_ts)$x)
df_serie_choisi = data.frame(Periode = as_date(time(diff_ts)),
Valeur = as_tibble(diff_ts)$x)
?time
cycle(diff_ts)
date(diff_ts)
time(diff_ts)
df_serie_choisi = data.frame(Periode = date_decimal(time(diff_ts)),
Valeur = as_tibble(diff_ts)$x)
?data_decimal()
?date_decimal
df_serie_choisi = data.frame(Periode = date_decimal(time(diff_ts)),
Valeur = as_tibble(diff_ts)$x)
time(diff_ts)
date_decimal(time(diff_ts)
)
date_decimal(time(diff_ts))
df_serie_choisi = data.frame(Periode = date_decimal(as_factor(time(diff_ts))),
Valeur = as_tibble(diff_ts)$x)
date_decimal(as_factor(time(diff_ts)))
as_tibble(time(diff_ts))
date_decimal(as_tibble(time(diff_ts)))
as_tibble(time(diff_ts))
as_tibble(time(diff_ts))$x
as_tibble(time(diff_ts))
list(time(diff_ts))
?as_factor
?as.factor()
as.factor(time(diff_ts))
df_serie_choisi = data.frame(Periode = date_decimal(as.factor(time(diff_ts))),
Valeur = as_tibble(diff_ts)$x)
date_decimal(as.factor(time(diff_ts)))
as.factor(time(diff_ts))
df_serie_choisi = data.frame(Periode = date_decimal(list(as.factor(time(diff_ts)))),
Valeur = as_tibble(diff_ts)$x)
df_serie_choisi = data.frame(Periode = time(diff_ts),
Valeur = as_tibble(diff_ts)$x)
graph_serie_choisi = ggplot(df_serie_choisi, aes(x = Periode, y = Valeur))+
geom_line()+
scale_x_date(expand = c(0.01, 0.01)) +
ggtitle("Série temporelle choisie (différenciation saisonnière et
\n différenciation première)") +
ggthemes::theme_stata()+
theme(
plot.title   = element_text(lineheight = 0.8, face = "bold", hjust = 0.5, size = 15),
axis.text.x  = element_text(angle = 45, hjust = 1),
axis.text.y  = element_text(),
axis.title.x = element_blank(),
axis.title.y = element_blank())
graph_serie_choisi
graph_serie_choisi = ggplot(df_serie_choisi, aes(x = Periode, y = Valeur))+
geom_line()
ggplot(df_serie_choisi, aes(x = Periode, y = Valeur))+
geom_line()
df_serie_choisi
df_serie_choisi$Periode
graph_serie_choisi = ggplot(df_serie_choisi, aes(x = Periode, y = Valeur))+
geom_line()+
scale_x_date(expand = c(0.01, 0.01))
graph_serie_choisi
graph_serie_choisi = ggplot(df_serie_choisi, aes(x = Periode, y = Valeur))+
geom_line()+
ggtitle("Série temporelle choisie (différenciation saisonnière et
\n différenciation première)") +
ggthemes::theme_stata()+
theme(
plot.title   = element_text(lineheight = 0.8, face = "bold", hjust = 0.5, size = 15),
axis.text.x  = element_text(angle = 45, hjust = 1),
axis.text.y  = element_text(),
axis.title.x = element_blank(),
axis.title.y = element_blank())
graph_serie_choisi
saveRDS(graph_serie_choisi, file.path(lien_graph, "ts_choisie.rds"))
# Question 4 : Estimation un ARMA(p,q)
ggacf(diff_ts)
# Question 4 : Estimation un ARMA(p,q)
ggAcf(diff_ts)
ggpacf(diff_ts)
ggPacf(diff_ts)
# Question 4 : Estimation un ARMA(p,q)
ggAcf(diff_ts)
# Testons cette hypothï¿½ses
model_maxi <- arima(diff_ts, order = c(2,0,3))
# Question 4 : Estimation un ARMA(p,q)
ggAcf(diff_ts)
ggPacf(diff_ts)
# Testons cette hypothï¿½ses
model_maxi <- arima(diff_ts, order = c(2,0,3))
# Testons cette hypothï¿½ses
model_maxi <- arima(diff_ts, order = c(1,0,3))
residus_maxi <- residuals(model_maxi)
# Parait bon :
ggAcf(residus_maxi) + ggPacf(residus_maxi)
# Une tendance ï¿½ la hausse semble se dï¿½gager
diff_ts = diff(ts_data, 1)
# ADF test
test_adf = urca::ur.df(diff_ts)
summary(test_adf)
# PP test
test_pp = tseries::pp.test(diff_ts) # test utilisï¿½ dans corrigï¿½
test_pp
# KPSS
test_kpss = urca::ur.kpss(diff_ts)
summary(test_kpss)
df_serie_choisi = data.frame(Periode = time(diff_ts),
Valeur = as_tibble(diff_ts)$x)
df_serie_choisi$Periode
graph_serie_choisi = ggplot(df_serie_choisi, aes(x = Periode, y = Valeur))+
geom_line()+
ggtitle("Série temporelle choisie (différenciation saisonnière et
\n différenciation première)") +
ggthemes::theme_stata()+
theme(
plot.title   = element_text(lineheight = 0.8, face = "bold", hjust = 0.5, size = 15),
axis.text.x  = element_text(angle = 45, hjust = 1),
axis.text.y  = element_text(),
axis.title.x = element_blank(),
axis.title.y = element_blank())
saveRDS(graph_serie_choisi, file.path(lien_graph, "ts_choisie.rds"))
# Question 4 : Estimation un ARMA(p,q)
ggAcf(diff_ts)
ggPacf(diff_ts)
# Testons cette hypothï¿½ses
model_maxi <- arima(diff_ts, order = c(1,0,3))
residus_maxi <- residuals(model_maxi)
# Parait bon :
ggAcf(residus_maxi) + ggPacf(residus_maxi)
